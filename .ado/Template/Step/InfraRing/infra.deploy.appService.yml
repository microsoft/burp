steps:
  # Setup private networking for web apps
  - task: AzurePowerShell@5
    name: UpdateDNSParameterFile_WebApp
    displayName: "Update Private DNS Zones Parameters File"
    inputs:
      azureSubscription: "$(TargetSubscriptionConnection)"
      ScriptType: "FilePath"
      ScriptPath: "$(Agent.BuildDirectory)/drop/Scripts/Update-ParamFile.ps1"
      ScriptArguments: "-VariablesFile $(Agent.BuildDirectory)/drop/.ado/Template/Variable/Variables-$(parameterRingN).yml -ParametersFile $(Agent.BuildDirectory)/drop/$(parametersPath)/PrivateDnsZones/parameters.json"
      azurePowerShellVersion: "LatestVersion"

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: "Deploy Web App Private DNS Zone"
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "$(TargetSubscriptionConnection)"
      subscriptionId: "$(SubscriptionId)"
      action: "Create Or Update Resource Group"
      resourceGroupName: "$(TargetResourceGroupCore)"
      location: "$(TargetRegion)"
      templateLocation: "Linked artifact"
      csmFile: "$(Agent.BuildDirectory)/drop/ARM/PrivateDnsZones/deploy.json"
      csmParametersFile: "$(Agent.BuildDirectory)/drop/$(parametersPath)/PrivateDnsZones/parameters.json"
      overrideParameters: >
        -privateDnsZoneName $(webAppDnsZoneName)
        -cuaId $(cuaId)
      deploymentMode: "Incremental"
      deploymentName: "deployWebAppPrivateDnsZones-$(Build.BuildNumber)"

  # Deploy App Plan to run Web Apps
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: "Create Azure App Service Plan"
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "$(TargetSubscriptionConnection)"
      subscriptionId: "$(SubscriptionId)"
      action: "Create Or Update Resource Group"
      resourceGroupName: "$(TargetResourceGroupCore)"
      location: "$(TargetRegion)"
      templateLocation: "Linked artifact"
      csmFile: "$(Agent.BuildDirectory)/drop/ARM/AppServicePlan/deploy.json"
      csmParametersFile: "$(Agent.BuildDirectory)/drop/$(parametersPath)/AppServicePlan/parameters.json"
      overrideParameters: >
        -appServicePlanName $(appServicePlanName)
        -cuaId $(cuaId)
      deploymentMode: "Incremental"
      deploymentName: "deployAzureWebAppPlan-$(Build.BuildNumber)"

  # Deploy Node App
  - task: AzurePowerShell@5
    name: GetWebApp_node
    displayName: "Assert if Node Web App Needs to be Deployed"
    inputs:
      azureSubscription: "$(TargetSubscriptionConnection)"
      ScriptType: "FilePath"
      ScriptPath: "$(Agent.BuildDirectory)/drop/Scripts/Get-WebApp.ps1"
      ScriptArguments: "-AppName $(WebAppName)-node -ResourceGroupName $(TargetResourceGroupCore)"
      azurePowerShellVersion: "LatestVersion"

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: "Create Node Web App"
    condition: ne(variables['GetWebApp_node.WebAppExist'], 'true')
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "$(TargetSubscriptionConnection)"
      subscriptionId: "$(SubscriptionId)"
      action: "Create Or Update Resource Group"
      resourceGroupName: "$(TargetResourceGroupCore)"
      location: "$(TargetRegion)"
      templateLocation: "Linked artifact"
      csmFile: "$(Agent.BuildDirectory)/drop/ARM/WebApp/deploy.json"
      csmParametersFile: "$(Agent.BuildDirectory)/drop/$(parametersPath)/WebApp/parameters.json"
      overrideParameters: >
        -webAppName $(WebAppName)-node
        -appServicePlanId $(AppPlanResourceId)
        -cuaId $(cuaId)
      deploymentMode: "Incremental"
      deploymentName: "deployAzureWebAppPlan-$(Build.BuildNumber)"

  - task: AzureCLI@2
    displayName: "Grant Node App rights to ACR"
    inputs:
      azureSubscription: "$(TargetSubscriptionConnection)"
      ScriptType: "pscore"
      scriptLocation: "scriptPath"
      ScriptPath: "$(Agent.BuildDirectory)/drop/Scripts/Set-WebAppPullAcr.ps1"
      Arguments: "-WebAppName $(WebAppName)-node -ResourceGroupName $(TargetResourceGroupCore) -ACRName $(ACRName)"

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: "Node Web App Deploy Private Endpoints"
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "$(TargetSubscriptionConnection)"
      subscriptionId: "$(SubscriptionId)"
      action: "Create Or Update Resource Group"
      resourceGroupName: "$(TargetResourceGroupCore)"
      location: "$(TargetRegion)"
      templateLocation: "Linked artifact"
      csmFile: "$(Agent.BuildDirectory)/drop/ARM/PrivateEndpoints/deploy.json"
      csmParametersFile: "$(Agent.BuildDirectory)/drop/$(parametersPath)/PrivateEndpoints/parameters.json"
      overrideParameters: >
        -privateEndpointName $(WebAppPrivateEndPointName)-node  
        -targetSubnetId $(PrivateEndpointTargetSubnetId)  
        -privateDNSId $(WebAppPrivateEndpointPrivateDNSId)  
        -serviceResourceId $(WebAppPrivateEndpointServiceResourceId)-node   
        -groupId ["sites"]
        -cuaId $(cuaId)
      deploymentMode: "Incremental"
      deploymentName: "deployPrivateEndpoints-$(Build.BuildNumber)"

  # Deploy Voting App
  - task: AzurePowerShell@5
    name: GetWebApp_vote
    displayName: "Assert if Voting Web App Needs to be Deployed"
    inputs:
      azureSubscription: "$(TargetSubscriptionConnection)"
      ScriptType: "FilePath"
      ScriptPath: "$(Agent.BuildDirectory)/drop/Scripts/Get-WebApp.ps1"
      ScriptArguments: "-AppName $(WebAppName) -ResourceGroupName $(TargetResourceGroupCore)"
      azurePowerShellVersion: "LatestVersion"

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: "Create Vote Web App"
    condition: ne(variables['GetWebApp_vote.WebAppExist'], 'true')
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "$(TargetSubscriptionConnection)"
      subscriptionId: "$(SubscriptionId)"
      action: "Create Or Update Resource Group"
      resourceGroupName: "$(TargetResourceGroupCore)"
      location: "$(TargetRegion)"
      templateLocation: "Linked artifact"
      csmFile: "$(Agent.BuildDirectory)/drop/ARM/WebApp/deploy.json"
      csmParametersFile: "$(Agent.BuildDirectory)/drop/$(parametersPath)/WebApp/parameters.json"
      overrideParameters: >
        -webAppName $(WebAppName)
        -appServicePlanId $(AppPlanResourceId)
        -cuaId $(cuaId)
      deploymentMode: "Incremental"
      deploymentName: "deployAzureWebAppPlan-$(Build.BuildNumber)"

  - task: AzureCLI@2
    displayName: "Grant Vote App rights to ACR"
    inputs:
      azureSubscription: "$(TargetSubscriptionConnection)"
      ScriptType: "pscore"
      scriptLocation: "scriptPath"
      ScriptPath: "$(Agent.BuildDirectory)/drop/Scripts/Set-WebAppPullAcr.ps1"
      Arguments: "-WebAppName $(WebAppName) -ResourceGroupName $(TargetResourceGroupCore) -ACRName $(ACRName)"

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: "Vote Web App Deploy Private Endpoints"
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "$(TargetSubscriptionConnection)"
      subscriptionId: "$(SubscriptionId)"
      action: "Create Or Update Resource Group"
      resourceGroupName: "$(TargetResourceGroupCore)"
      location: "$(TargetRegion)"
      templateLocation: "Linked artifact"
      csmFile: "$(Agent.BuildDirectory)/drop/ARM/PrivateEndpoints/deploy.json"
      csmParametersFile: "$(Agent.BuildDirectory)/drop/$(parametersPath)/PrivateEndpoints/parameters.json"
      overrideParameters: >
        -privateEndpointName $(WebAppPrivateEndPointName)  
        -targetSubnetId $(PrivateEndpointTargetSubnetId)  
        -privateDNSId $(WebAppPrivateEndpointPrivateDNSId)  
        -serviceResourceId $(WebAppPrivateEndpointServiceResourceId)   
        -groupId ["sites"]
        -cuaId $(cuaId)
      deploymentMode: "Incremental"
      deploymentName: "deployPrivateEndpoints-$(Build.BuildNumber)"

  # Deploy .NET Core App
  - task: AzurePowerShell@5
    name: GetWebApp_dnc
    displayName: "Assert if DncApp Web App Needs to be Deployed"
    inputs:
      azureSubscription: "$(TargetSubscriptionConnection)"
      ScriptType: "FilePath"
      ScriptPath: "$(Agent.BuildDirectory)/drop/Scripts/Get-WebApp.ps1"
      ScriptArguments: "-AppName $(WebAppName)-dnc -ResourceGroupName $(TargetResourceGroupCore)"
      azurePowerShellVersion: "LatestVersion"

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: "Create Dnc Web App"
    condition: ne(variables['GetWebApp_dnc.WebAppExist'], 'true')
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "$(TargetSubscriptionConnection)"
      subscriptionId: "$(SubscriptionId)"
      action: "Create Or Update Resource Group"
      resourceGroupName: "$(TargetResourceGroupCore)"
      location: "$(TargetRegion)"
      templateLocation: "Linked artifact"
      csmFile: "$(Agent.BuildDirectory)/drop/ARM/WebApp/deploy.json"
      csmParametersFile: "$(Agent.BuildDirectory)/drop/$(parametersPath)/WebApp/parameters.json"
      overrideParameters: "-webAppName $(WebAppName)-dnc -appServicePlanId $(AppPlanResourceId)"
      deploymentMode: "Incremental"
      deploymentName: "deployAzureWebAppPlan-$(Build.BuildNumber)"

  - task: AzureCLI@2
    displayName: "Grant Dnc App rights to ACR"
    inputs:
      azureSubscription: "$(TargetSubscriptionConnection)"
      ScriptType: "pscore"
      scriptLocation: "scriptPath"
      ScriptPath: "$(Agent.BuildDirectory)/drop/Scripts/Set-WebAppPullAcr.ps1"
      Arguments: "-WebAppName $(WebAppName)-dnc -ResourceGroupName $(TargetResourceGroupCore) -ACRName $(ACRName)"

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: "Dnc Web App Deploy Private Endpoints"
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "$(TargetSubscriptionConnection)"
      subscriptionId: "$(SubscriptionId)"
      action: "Create Or Update Resource Group"
      resourceGroupName: "$(TargetResourceGroupCore)"
      location: "$(TargetRegion)"
      templateLocation: "Linked artifact"
      csmFile: "$(Agent.BuildDirectory)/drop/ARM/PrivateEndpoints/deploy.json"
      csmParametersFile: "$(Agent.BuildDirectory)/drop/$(parametersPath)/PrivateEndpoints/parameters.json"
      overrideParameters: >
        -privateEndpointName $(WebAppPrivateEndPointName)-dnc  
        -targetSubnetId $(PrivateEndpointTargetSubnetId)  
        -privateDNSId $(WebAppPrivateEndpointPrivateDNSId)  
        -serviceResourceId $(WebAppPrivateEndpointServiceResourceId)-dnc   
        -groupId ["sites"]
      deploymentMode: "Incremental"
      deploymentName: "deployPrivateEndpoints-$(Build.BuildNumber)"

  # Grant Network access to ACR from output IP of Web Apps
  # Not using vnet integration because it is not supported for Docker Compose scenarios
  # https://docs.microsoft.com/en-us/azure/app-service/overview-vnet-integration#troubleshooting
  - task: AzureCLI@2
    name: AppSvcFwException
    displayName: "Add IPs to ACR FW"
    inputs:
      azureSubscription: "$(TargetSubscriptionConnection)"
      scriptType: "pscore"
      scriptLocation: "scriptPath"
      ScriptPath: "$(Agent.BuildDirectory)/drop/Scripts/Set-AcrFirewall.ps1"
      arguments: >
        -ACRName $(ACRName) 
        -ResourceGroupName $(TargetResourceGroupCore)
