steps:
  - checkout: self
    path: CNA
    clean: true
    fetchDepth: 1
# - task: AzureKeyVault@1
#   inputs:
#     azureSubscription: $(TargetSubscriptionConnection)
#     KeyVaultName: $(keyVaultName)
#     SecretsFilter: clientId
#     RunAsPreJob: false

# - task: AzureKeyVault@1
#   inputs:
#     azureSubscription: $(TargetSubscriptionConnection)
#     KeyVaultName: $(keyVaultName)
#     SecretsFilter: clientSecret
#     RunAsPreJob: false

# - task: AzureKeyVault@1
#   inputs:
#     azureSubscription: $(TargetSubscriptionConnection)
#     KeyVaultName: $(keyVaultName)
#     SecretsFilter: sessionSecret
#     RunAsPreJob: false

# - task: AzureKeyVault@1
#   inputs:
#     azureSubscription: $(TargetSubscriptionConnection)
#     KeyVaultName: $(keyVaultName)
#     SecretsFilter: authority
#     RunAsPreJob: false

# - task: PowerShell@2
#   name: UpdateAppConfig
#   displayName: Update App Configuration
#   inputs:
#     filePath: 'Scripts/Update-TemplateText.ps1'
#     arguments: >
#       -FileList @(
#         "src\azure-vote\azure-vote\config_file.cfg"
#       )
#       -ReplacementList @{
#         "[[clientId]]" = "$(clientId)";
#         "[[clientSecret]]" = '$(clientSecret)';
#         "[[sessionSecret]]" = '$(sessionSecret)';
#         "[[authority]]" = "$(authority)";
#         "[[ADOBuildVersion]]" = "$(Build.BuildNumber)"
#       }

# - task: DockerCompose@0
#   name: BuildVotingAppContainerImage
#   displayName: Docker-Compose Build Vote App
#   inputs:
#     containerregistrytype: 'Azure Container Registry'
#     azureSubscription: '$(TargetSubscriptionConnection)'
#     azureContainerRegistry: '$(ACRNameString)'
#     dockerComposeFile: '$(System.DefaultWorkingDirectory)/src/docker-compose-build.yaml'
#     action: 'Build services'
#     additionalImageTags: '$(Build.BuildId)'

# - task: DockerCompose@0
#   name: PushVotingAppContainerImage
#   displayName: Docker-Compose Push Vote App
#   inputs:
#     containerregistrytype: 'Azure Container Registry'
#     azureSubscription: '$(TargetSubscriptionConnection)'
#     azureContainerRegistry: '$(ACRNameString)'
#     dockerComposeFile: '$(System.DefaultWorkingDirectory)/src/docker-compose-build.yaml'
#     action: 'Push services'
#     additionalImageTags: '$(Build.BuildId)'

# - task: AzureCLI@2
#   name: SetAppInsightsInstrumentationKey
#   displayName: "Set Application Insights Instrumentation Key"
#   inputs:
#     azureSubscription: '$(TargetSubscriptionConnection)'
#     scriptType: 'pscore'
#     scriptLocation: 'scriptPath'
#     scriptPath: 'Scripts/Set-AppInsights-InstrumentationKey.ps1'
#     arguments: >
#       -AppInsightsName $(AppInsightsName)
#       -ResourceGroupName $(TargetResourceGroupCore)
