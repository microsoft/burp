steps:
  - task: AzureKeyVault@1
    inputs:
      azureSubscription: $(TargetSubscriptionConnection)
      KeyVaultName: $(keyVaultName)
      SecretsFilter: clientId
      RunAsPreJob: false

  - task: AzureKeyVault@1
    inputs:
      azureSubscription: $(TargetSubscriptionConnection)
      KeyVaultName: $(keyVaultName)
      SecretsFilter: clientSecret
      RunAsPreJob: false

  - task: AzureKeyVault@1
    inputs:
      azureSubscription: $(TargetSubscriptionConnection)
      KeyVaultName: $(keyVaultName)
      SecretsFilter: sessionSecret
      RunAsPreJob: false

  - task: AzureKeyVault@1
    inputs:
      azureSubscription: $(TargetSubscriptionConnection)
      KeyVaultName: $(keyVaultName)
      SecretsFilter: authority
      RunAsPreJob: false

  - task: PowerShell@2
    name: UpdateAppConfig
    displayName: Update App Configuration
    inputs:
      filePath: "$(Agent.BuildDirectory)/drop/Scripts/Update-TemplateText.ps1"
      workingDirectory: "$(Agent.BuildDirectory)/drop"
      arguments: >
        -FileList @(
          "src\azure-vote\azure-vote\config_file.cfg"
        ) 
        -ReplacementList @{
          "[[clientId]]" = "$(clientId)"; 
          "[[clientSecret]]" = '$(clientSecret)'; 
          "[[sessionSecret]]" = '$(sessionSecret)';
          "[[authority]]" = "$(authority)"; 
          "[[ADOBuildVersion]]" = "$(Build.BuildNumber)"
        }

  - task: DockerCompose@0
    name: BuildVotingAppContainerImage
    displayName: Docker-Compose Build Vote App
    inputs:
      containerregistrytype: "Azure Container Registry"
      azureSubscription: "$(TargetSubscriptionConnection)"
      azureContainerRegistry: "$(ACRNameString)"
      dockerComposeFile: "$(Agent.BuildDirectory)/drop/src/docker-compose-build.yaml"
      action: "Build services"
      additionalImageTags: "$(Build.BuildId)"

  - task: DockerCompose@0
    name: PushVotingAppContainerImage
    displayName: Docker-Compose Push Vote App
    inputs:
      containerregistrytype: "Azure Container Registry"
      azureSubscription: "$(TargetSubscriptionConnection)"
      azureContainerRegistry: "$(ACRNameString)"
      dockerComposeFile: "$(Agent.BuildDirectory)/drop/src/docker-compose-build.yaml"
      action: "Push services"
      additionalImageTags: "$(Build.BuildId)"

  - task: AzureCLI@2
    name: SetAppInsightsInstrumentationKey
    displayName: "Set Application Insights Instrumentation Key"
    inputs:
      azureSubscription: "$(TargetSubscriptionConnection)"
      scriptType: "pscore"
      scriptLocation: "scriptPath"
      ScriptPath: "$(Agent.BuildDirectory)/drop/Scripts/Set-AppInsights-InstrumentationKey.ps1"
      arguments: >
        -AppInsightsName $(AppInsightsName) 
        -ResourceGroupName $(TargetResourceGroupCore)
